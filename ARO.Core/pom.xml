<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.att.aro</groupId>
	<artifactId>aro-core</artifactId>
	<version>6.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<ga.id>dev</ga.id>
		<build.number>dev</build.number>
		<maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>MavenCentral Repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>apache-releases</id>
			<name>Apache Releases</name>
            <url>https://repository.apache.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>		
        </repository>
		<repository>
			<id>apache-snapshots</id>
			<name>Apache Snapshots</name>
            <url>https://repository.apache.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
		</repository>
		<repository>
			<id>atlassian-public</id>
			<name>atlassian</name>
			<url>https://packages.atlassian.com/maven/repository/public</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		<repository>
			<id>sonatype-public</id>
			<name>Sonatype Public</name>
			<url>http://repository.sonatype.org/content/groups/public</url>
		</repository>
		<repository>
			<id>sonatype-flex</id>
			<name>Sonatype Flex</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		      <repository>
         <id>OSGeo</id>
         <url>http://download.osgeo.org/webdav/geotools</url>
      </repository>
      <repository>
			<id>jitpack.io</id>
			<name>jitpack</name>
			<url>https://jitpack.io</url>
		</repository>
		<repository>
			<id>Google</id>
			<name>Google</name>
			<url>https://maven.google.com/</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>MavenCentral Repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>1.11.218</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.3.4.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	<dependency>
		<groupId>com.amazonaws</groupId>
		<artifactId>aws-java-sdk-s3</artifactId>
 	</dependency>
	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.5.3</version>
	</dependency>

	<dependency>
		<groupId>org.glassfish.jaxb</groupId>
		<artifactId>jaxb-runtime</artifactId>
		<version>2.2.11</version>
	</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.2.11</version>
		</dependency>
		<!-- end jaxb support -->

		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.5</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>1.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.4.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.media.jai</groupId>
			<artifactId>com.springsource.javax.media.jai.core</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-classloading-xstream</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule-agent</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.1</version>
		</dependency>
		<dependency>
			<groupId>com.yahoo.platform.yui</groupId>
			<artifactId>yuicompressor</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.htmlcompressor</groupId>
			<artifactId>htmlcompressor</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			  <groupId>com.fasterxml.jackson.core</groupId>
			  <artifactId>jackson-core</artifactId>
			  <version>2.9.4</version>
		</dependency>
		<dependency>
		  <groupId>com.fasterxml.jackson.core</groupId>
		  <artifactId>jackson-databind</artifactId>
		  <version>2.9.4</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>findbugs-maven-plugin</artifactId>
		    <version>3.0.4</version>
		</dependency>
		<dependency>
			<groupId>com.android.tools.ddms</groupId>
			<artifactId>ddmlib</artifactId>
			<version>26.1.2</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.0</version>
		</dependency>
		<!--Please download the source code from the web site and compile it and publish to your own local repository-->
<!--https://bitbucket.org/luciad/webp-imageio  -->
<!--mvn install:install-file -Dfile=luciad-webp-imageio-0.6.0-SNAPSHOT.jar -DgroupId=com.luciad.imageio \-DartifactId=webp-imageio \-Dversion=0.6.0-SNAPSHOT \-Dpackaging=jar -->		
		<dependency>
			<groupId>com.luciad.imageio</groupId>
			<artifactId>webp-imageio</artifactId>
			<version>0.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-jpeg2000</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
		  <groupId>org.hyperic</groupId>
		  <artifactId>sigar</artifactId>
		  <version>1.6.4</version>
		</dependency>
		<!-- jni ffmpeg support -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacv</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>opencv</artifactId>
			<version>3.1.0-1.2</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg</artifactId>
			<version>3.0.2-1.2</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>flycapture</artifactId>
			<version>2.9.3.43-1.2</version>
		</dependency>
		<!-- end jni ffmpeg support -->
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixapi</artifactId>
			<version>1.1.0</version>
		</dependency>

	</dependencies>


	<build>
<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/build.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/build.properties</include>
				</includes>
			</resource>
		</resources>
		<plugins>

			<!-- compile to 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>findbugs-maven-plugin</artifactId>
	            <version>3.0.4</version>
	            <configuration>
	            	<excludeFilterFile>findbugs_exclude.xml</excludeFilterFile>
	                <effort>Max</effort>
	                <threshold>Max</threshold>
	                <maxRank>15</maxRank>
	                <xmlOutput>true</xmlOutput>
	                <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
	            </configuration>
	            <executions>
	                <execution>
	                    <id>analyze-compile</id>
	                    <!-- <phase>compile</phase> -->
	                    <goals>
	                        <goal>check</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>

			<plugin>
			  <artifactId>maven-install-plugin</artifactId>
			  <version>2.5.2</version>
			  <executions>
			    <execution>
		    		<id>1</id>
			      <phase>pre-clean</phase>
			      <goals>
			        <goal>install-file</goal>
			      </goals>
			      <configuration>
					<groupId>com.luciad.imageio</groupId>
					<artifactId>webp-imageio</artifactId>
					<packaging>jar</packaging>
					<version>0.5.2</version>
			        <file>lib/webp-imageio-0.5.2.jar</file>
			      </configuration>
			    </execution>
			    <execution>
			    	<id>2</id>
			      <phase>pre-clean</phase>
			      <goals>
			        <goal>install-file</goal>
			      </goals>
			      <configuration>
					<groupId>com.proxy</groupId>
					<artifactId>proxy-vole</artifactId>
					<packaging>jar</packaging>
					<version>1.0</version>
			        <file>lib/proxy-vole-1.0.jar</file>
			      </configuration>
			    </execution>
			    <execution>
		    		<id>3</id>
			      <phase>pre-clean</phase>
			      <goals>
			        <goal>install-file</goal>
			      </goals>
			      <configuration>
					<groupId>com.github.jai-imageio</groupId>
					<artifactId>jai-imageio-jpeg2000</artifactId>
					<packaging>jar</packaging>
					<version>1.1</version>
			        <file>lib/jai-imageio-jpeg2000-1.1.jar</file>
			      </configuration>
			    </execution>
			    
			  </executions>
			</plugin>
						
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.16</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/libs</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>*Test</exclude>
										<exclude>*Config</exclude>
										<exclude>*LoggerPostProcessor</exclude>
										<exclude>*pojo*</exclude>
										<exclude>*NetmonAdapter</exclude>
										<exclude>com.att.aro.pcap.PCapAdapter</exclude>
										<exclude>*securedpacketreader*</exclude>
										<exclude>com.att.aro.core.commandline.impl.ProcessFactoryImpl</exclude>
										<exclude>com.att.aro.core.datacollector.impl.DefaultDataCollectorImpl</exclude>
										<exclude>com.att.aro.mvc.MainController</exclude>
										<exclude>com.att.aro.core.util.Util</exclude>
										<exclude>com.att.aro.mvc.AROController*</exclude>
										<exclude>com.att.aro.mvc.AROCollectorActionEvent</exclude>
										<exclude>com.att.aro.core.exception.*</exclude>
										<exclude>com.att.aro.core.analytics.*</exclude>
										<exclude>com.att.aro.core.util.GoogleAnalyticsUtil</exclude>
										<exclude>com.att.aro.core.util.CrashHandler</exclude>
										<exclude>com.att.aro.core.packetanalysis.impl.SessionManagerImpl</exclude>
										<exclude>com.att.aro.pcap.packetrebuild.*</exclude>
										<exclude>com.att.aro.core.packetreader.impl.PacketReaderImpl</exclude>
										<exclude>com.att.aro.core.fileio.impl.FileManagerImpl.1</exclude>

										<!-- exclude for screenrecord development -->
										<exclude>com.att.aro.core.video.IScreenRecorder</exclude>
										<exclude>com.att.aro.core.video.IScreenRecorder.State</exclude>
										<exclude>com.att.aro.core.video.impl.ScreenRecorderImpl</exclude>
										<exclude>com.att.aro.core.video.impl.ScreenRecorderImpl.1</exclude>
										<exclude>com.att.aro.core.video.impl.ScreenRecorderImpl.VideoSegment</exclude>
										<exclude>com.att.aro.core.video.impl.ScreenRecorderImpl.VideoSegment.Segment</exclude>
										<exclude>com.att.aro.core.adb.impl.AdbServiceImpl</exclude>
										<!-- end of exclude for screenrecord development -->

										<!-- exclude for development VideoBP -->
										<exclude>com.att.aro.core.bestpractice.impl.*</exclude>
										<exclude>com.att.aro.core.impl.AROServiceImpl</exclude>
										<exclude>com.att.aro.core.packetanalysis.impl.VideoUsageAnalysisImpl</exclude>
										<exclude>com.att.aro.core.videoanalysis.impl.BufferOccupancyCalculatorImp</exclude>
										<exclude>com.att.aro.core.videoanalysis.*</exclude>
										<exclude>com.att.aro.core.videoanalysis.pojo.*</exclude>
										<exclude>com.att.aro.core.videoanalysis.impl.*</exclude>
										<exclude>com.att.aro.core.util.StringParse</exclude>
										<!-- end of exclude for development VideoBP -->

										<exclude>com.att.aro.core.fileio.impl.FileManagerImpl</exclude>
										<exclude>com.att.aro.core.video.VideoHelper</exclude>
										<exclude>com.att.aro.core.AnalyzerOS</exclude>

										<!-- exclude for wrapper classes -->
										<exclude>com.att.aro.core.preferences.impl.PreferenceHandlerImpl</exclude>
										<exclude>com.att.aro.core.settings.*</exclude>
										<exclude>com.att.aro.core.settings.impl.*</exclude>
										
										<!-- exclude for enums -->
										<exclude>com.att.aro.core.settings.impl.SettingsImpl.ConfigFileAttributes</exclude>										
										
										<!-- Lambdas -->
										<exclude>com.att.aro.core.impl.AROServiceImpl.*</exclude>
										
										<!--  temporary  -->
										<exclude>com.att.aro.core.peripheral.impl.CollectOptionsReaderImpl</exclude>
										<exclude>com.att.aro.core.util.AttnScriptUtil</exclude>
										<!--  FIXME remove after 1.3 is done. --> 
										<exclude>com.att.aro.core.commandline.impl.LLDBProcessRunnerImpl</exclude>
										<exclude>com.att.aro.core.cloud.*</exclude>					
										<exclue>com.att.aro.core.packetanalysis.impl.TraceDataReaderImpl</exclue>			
										
										<exclude>com.att.aro.core.util.FFmpegConfirmationImpl</exclude>
										<exclude>com.att.aro.core.util.PcapConfirmationImpl</exclude>
										<exclude>com.att.aro.core.video.amvots.ImageBoundsGrabber</exclude>
										<exclude>com.att.aro.core.video.amvots.ImageBoundsGrabber.SikulixLib</exclude>
										<exclude>com.att.aro.core.peripheral.impl.SpeedThrottleEventReaderImpl</exclude>
										<exclude>com.att.aro.core.util.Compressor</exclude>
										<exclude>com.att.aro.core.util.NetworkUtil</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<configuration>
					<show>public</show>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
